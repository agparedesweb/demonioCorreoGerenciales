'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5420
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=2.0.50727.5420.
'
Namespace wsMarengo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="GrowerServiceSoap", [Namespace]:="http://marengosite.com")>  _
    Partial Public Class GrowerService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InOutsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InventoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SalesByDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IntegraFacturacion.My.MySettings.Default.DemonioInventariosDist_wsMarengo_GrowerService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InOutsCompleted As InOutsCompletedEventHandler
        
        '''<remarks/>
        Public Event InventoryCompleted As InventoryCompletedEventHandler
        
        '''<remarks/>
        Public Event SalesByDateCompleted As SalesByDateCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://marengosite.com/InOuts", RequestNamespace:="http://marengosite.com", ResponseNamespace:="http://marengosite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InOuts(ByVal GrowerCode As String, ByVal Password As String, ByVal DateShip As Date) As GrowerInOuts()
            Dim results() As Object = Me.Invoke("InOuts", New Object() {GrowerCode, Password, DateShip})
            Return CType(results(0),GrowerInOuts())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InOutsAsync(ByVal GrowerCode As String, ByVal Password As String, ByVal DateShip As Date)
            Me.InOutsAsync(GrowerCode, Password, DateShip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InOutsAsync(ByVal GrowerCode As String, ByVal Password As String, ByVal DateShip As Date, ByVal userState As Object)
            If (Me.InOutsOperationCompleted Is Nothing) Then
                Me.InOutsOperationCompleted = AddressOf Me.OnInOutsOperationCompleted
            End If
            Me.InvokeAsync("InOuts", New Object() {GrowerCode, Password, DateShip}, Me.InOutsOperationCompleted, userState)
        End Sub
        
        Private Sub OnInOutsOperationCompleted(ByVal arg As Object)
            If (Not (Me.InOutsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InOutsCompleted(Me, New InOutsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://marengosite.com/Inventory", RequestNamespace:="http://marengosite.com", ResponseNamespace:="http://marengosite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Inventory(ByVal GrowerCode As String, ByVal Password As String) As GrowerInventory()
            Dim results() As Object = Me.Invoke("Inventory", New Object() {GrowerCode, Password})
            Return CType(results(0),GrowerInventory())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InventoryAsync(ByVal GrowerCode As String, ByVal Password As String)
            Me.InventoryAsync(GrowerCode, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InventoryAsync(ByVal GrowerCode As String, ByVal Password As String, ByVal userState As Object)
            If (Me.InventoryOperationCompleted Is Nothing) Then
                Me.InventoryOperationCompleted = AddressOf Me.OnInventoryOperationCompleted
            End If
            Me.InvokeAsync("Inventory", New Object() {GrowerCode, Password}, Me.InventoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnInventoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.InventoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InventoryCompleted(Me, New InventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://marengosite.com/SalesByDate", RequestNamespace:="http://marengosite.com", ResponseNamespace:="http://marengosite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SalesByDate(ByVal GrowerCode As String, ByVal Password As String, ByVal [Date] As Date) As SalesByDate()
            Dim results() As Object = Me.Invoke("SalesByDate", New Object() {GrowerCode, Password, [Date]})
            Return CType(results(0),SalesByDate())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SalesByDateAsync(ByVal GrowerCode As String, ByVal Password As String, ByVal [Date] As Date)
            Me.SalesByDateAsync(GrowerCode, Password, [Date], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SalesByDateAsync(ByVal GrowerCode As String, ByVal Password As String, ByVal [Date] As Date, ByVal userState As Object)
            If (Me.SalesByDateOperationCompleted Is Nothing) Then
                Me.SalesByDateOperationCompleted = AddressOf Me.OnSalesByDateOperationCompleted
            End If
            Me.InvokeAsync("SalesByDate", New Object() {GrowerCode, Password, [Date]}, Me.SalesByDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnSalesByDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.SalesByDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SalesByDateCompleted(Me, New SalesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://marengosite.com")>  _
    Partial Public Class GrowerInOuts
        
        Private growerField As String
        
        Private branchField As String
        
        Private commodityNameField As String
        
        Private packStyleField As String
        
        Private labelField As String
        
        Private sizeField As String
        
        Private uoMField As String
        
        Private inventoryField As System.Nullable(Of Integer)
        
        Private insField As System.Nullable(Of Integer)
        
        Private outsField As System.Nullable(Of Integer)
        
        '''<comentarios/>
        Public Property Grower() As String
            Get
                Return Me.growerField
            End Get
            Set
                Me.growerField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Branch() As String
            Get
                Return Me.branchField
            End Get
            Set
                Me.branchField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CommodityName() As String
            Get
                Return Me.commodityNameField
            End Get
            Set
                Me.commodityNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PackStyle() As String
            Get
                Return Me.packStyleField
            End Get
            Set
                Me.packStyleField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Size() As String
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UoM() As String
            Get
                Return Me.uoMField
            End Get
            Set
                Me.uoMField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Inventory() As System.Nullable(Of Integer)
            Get
                Return Me.inventoryField
            End Get
            Set
                Me.inventoryField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Ins() As System.Nullable(Of Integer)
            Get
                Return Me.insField
            End Get
            Set
                Me.insField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Outs() As System.Nullable(Of Integer)
            Get
                Return Me.outsField
            End Get
            Set
                Me.outsField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://marengosite.com")>  _
    Partial Public Class SalesByDate
        
        Private growerField As String
        
        Private customerField As String
        
        Private commodityNameField As String
        
        Private packStyleField As String
        
        Private labelField As String
        
        Private sizeField As String
        
        Private uoMField As String
        
        Private qtyField As System.Nullable(Of Integer)
        
        Private grossField As System.Nullable(Of Decimal)
        
        Private adjField As System.Nullable(Of Decimal)
        
        Private netField As System.Nullable(Of Decimal)
        
        Private unitPriceField As System.Nullable(Of Decimal)
        
        Private shipDateField As Date
        
        Private salesTypeField As String
        
        '''<comentarios/>
        Public Property Grower() As String
            Get
                Return Me.growerField
            End Get
            Set
                Me.growerField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Customer() As String
            Get
                Return Me.customerField
            End Get
            Set
                Me.customerField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CommodityName() As String
            Get
                Return Me.commodityNameField
            End Get
            Set
                Me.commodityNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PackStyle() As String
            Get
                Return Me.packStyleField
            End Get
            Set
                Me.packStyleField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Size() As String
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UoM() As String
            Get
                Return Me.uoMField
            End Get
            Set
                Me.uoMField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Qty() As System.Nullable(Of Integer)
            Get
                Return Me.qtyField
            End Get
            Set
                Me.qtyField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Gross() As System.Nullable(Of Decimal)
            Get
                Return Me.grossField
            End Get
            Set
                Me.grossField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Adj() As System.Nullable(Of Decimal)
            Get
                Return Me.adjField
            End Get
            Set
                Me.adjField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Net() As System.Nullable(Of Decimal)
            Get
                Return Me.netField
            End Get
            Set
                Me.netField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitPrice() As System.Nullable(Of Decimal)
            Get
                Return Me.unitPriceField
            End Get
            Set
                Me.unitPriceField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ShipDate() As Date
            Get
                Return Me.shipDateField
            End Get
            Set
                Me.shipDateField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property SalesType() As String
            Get
                Return Me.salesTypeField
            End Get
            Set
                Me.salesTypeField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://marengosite.com")>  _
    Partial Public Class GrowerInventory
        
        Private growerField As String
        
        Private commodityNameField As String
        
        Private packStyleField As String
        
        Private labelField As String
        
        Private sizeField As String
        
        Private uoMField As String
        
        Private inventoryField As System.Nullable(Of Integer)
        
        '''<comentarios/>
        Public Property Grower() As String
            Get
                Return Me.growerField
            End Get
            Set
                Me.growerField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CommodityName() As String
            Get
                Return Me.commodityNameField
            End Get
            Set
                Me.commodityNameField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PackStyle() As String
            Get
                Return Me.packStyleField
            End Get
            Set
                Me.packStyleField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Size() As String
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UoM() As String
            Get
                Return Me.uoMField
            End Get
            Set
                Me.uoMField = value
            End Set
        End Property
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Inventory() As System.Nullable(Of Integer)
            Get
                Return Me.inventoryField
            End Get
            Set
                Me.inventoryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub InOutsCompletedEventHandler(ByVal sender As Object, ByVal e As InOutsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InOutsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GrowerInOuts()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GrowerInOuts())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub InventoryCompletedEventHandler(ByVal sender As Object, ByVal e As InventoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InventoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As GrowerInventory()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),GrowerInventory())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SalesByDateCompletedEventHandler(ByVal sender As Object, ByVal e As SalesByDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SalesByDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SalesByDate()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SalesByDate())
            End Get
        End Property
    End Class
End Namespace
